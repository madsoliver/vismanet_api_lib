<?php
/**
 * LandedCostUpdateDto
 *
 * PHP version 5
 *
 * @category Class
 * @package  Ekstralys\VismaNetApi
 * @author   Swagger Codegen team
 * @link     https://github.com/swagger-api/swagger-codegen
 */

/**
 * Visma Net API
 *
 * No description provided (generated by Swagger Codegen https://github.com/swagger-api/swagger-codegen)
 *
 * OpenAPI spec version: 8.43.00.1002
 * 
 * Generated by: https://github.com/swagger-api/swagger-codegen.git
 * Swagger Codegen version: 2.4.19
 */

/**
 * NOTE: This class is auto generated by the swagger code generator program.
 * https://github.com/swagger-api/swagger-codegen
 * Do not edit the class manually.
 */

namespace Ekstralys\VismaNetApi\Model;

use \ArrayAccess;
use \Ekstralys\VismaNetApi\ObjectSerializer;

/**
 * LandedCostUpdateDto Class Doc Comment
 *
 * @category Class
 * @description This class represents a Landed Cost Line for Purchase Receipt in PurchaseReceiptController. Used for getting data.
 * @package  Ekstralys\VismaNetApi
 * @author   Swagger Codegen team
 * @link     https://github.com/swagger-api/swagger-codegen
 */
class LandedCostUpdateDto implements ModelInterface, ArrayAccess
{
    const DISCRIMINATOR = null;

    /**
      * The original name of the model.
      *
      * @var string
      */
    protected static $swaggerModelName = 'LandedCostUpdateDto';

    /**
      * Array of property to type mappings. Used for (de)serialization
      *
      * @var string[]
      */
    protected static $swaggerTypes = [
        'operation' => 'string',
        'line_nbr' => 'object',
        'landed_cost_code' => 'object',
        'description' => 'object',
        'purchase_invoice_nbr' => 'object',
        'supplier_id' => 'object',
        'location_id' => 'object',
        'ap_bill_date' => 'object',
        'currency' => 'object',
        'amount' => 'object',
        'tax_category' => 'object',
        'terms' => 'object',
        'inventory_id' => 'object',
        'ap_doc_type' => 'object',
        'ap_ref_nbr' => 'object',
        'in_doc_type' => 'object',
        'in_ref_nbr' => 'object',
        'postpone_purchase_invoice_creation' => 'object'
    ];

    /**
      * Array of property to format mappings. Used for (de)serialization
      *
      * @var string[]
      */
    protected static $swaggerFormats = [
        'operation' => null,
        'line_nbr' => null,
        'landed_cost_code' => null,
        'description' => null,
        'purchase_invoice_nbr' => null,
        'supplier_id' => null,
        'location_id' => null,
        'ap_bill_date' => null,
        'currency' => null,
        'amount' => null,
        'tax_category' => null,
        'terms' => null,
        'inventory_id' => null,
        'ap_doc_type' => null,
        'ap_ref_nbr' => null,
        'in_doc_type' => null,
        'in_ref_nbr' => null,
        'postpone_purchase_invoice_creation' => null
    ];

    /**
     * Array of property to type mappings. Used for (de)serialization
     *
     * @return array
     */
    public static function swaggerTypes()
    {
        return self::$swaggerTypes;
    }

    /**
     * Array of property to format mappings. Used for (de)serialization
     *
     * @return array
     */
    public static function swaggerFormats()
    {
        return self::$swaggerFormats;
    }

    /**
     * Array of attributes where the key is the local name,
     * and the value is the original name
     *
     * @var string[]
     */
    protected static $attributeMap = [
        'operation' => 'operation',
        'line_nbr' => 'lineNbr',
        'landed_cost_code' => 'landedCostCode',
        'description' => 'description',
        'purchase_invoice_nbr' => 'purchaseInvoiceNbr',
        'supplier_id' => 'supplierId',
        'location_id' => 'locationId',
        'ap_bill_date' => 'apBillDate',
        'currency' => 'currency',
        'amount' => 'amount',
        'tax_category' => 'taxCategory',
        'terms' => 'terms',
        'inventory_id' => 'inventoryId',
        'ap_doc_type' => 'apDocType',
        'ap_ref_nbr' => 'apRefNbr',
        'in_doc_type' => 'inDocType',
        'in_ref_nbr' => 'inRefNbr',
        'postpone_purchase_invoice_creation' => 'postponePurchaseInvoiceCreation'
    ];

    /**
     * Array of attributes to setter functions (for deserialization of responses)
     *
     * @var string[]
     */
    protected static $setters = [
        'operation' => 'setOperation',
        'line_nbr' => 'setLineNbr',
        'landed_cost_code' => 'setLandedCostCode',
        'description' => 'setDescription',
        'purchase_invoice_nbr' => 'setPurchaseInvoiceNbr',
        'supplier_id' => 'setSupplierId',
        'location_id' => 'setLocationId',
        'ap_bill_date' => 'setApBillDate',
        'currency' => 'setCurrency',
        'amount' => 'setAmount',
        'tax_category' => 'setTaxCategory',
        'terms' => 'setTerms',
        'inventory_id' => 'setInventoryId',
        'ap_doc_type' => 'setApDocType',
        'ap_ref_nbr' => 'setApRefNbr',
        'in_doc_type' => 'setInDocType',
        'in_ref_nbr' => 'setInRefNbr',
        'postpone_purchase_invoice_creation' => 'setPostponePurchaseInvoiceCreation'
    ];

    /**
     * Array of attributes to getter functions (for serialization of requests)
     *
     * @var string[]
     */
    protected static $getters = [
        'operation' => 'getOperation',
        'line_nbr' => 'getLineNbr',
        'landed_cost_code' => 'getLandedCostCode',
        'description' => 'getDescription',
        'purchase_invoice_nbr' => 'getPurchaseInvoiceNbr',
        'supplier_id' => 'getSupplierId',
        'location_id' => 'getLocationId',
        'ap_bill_date' => 'getApBillDate',
        'currency' => 'getCurrency',
        'amount' => 'getAmount',
        'tax_category' => 'getTaxCategory',
        'terms' => 'getTerms',
        'inventory_id' => 'getInventoryId',
        'ap_doc_type' => 'getApDocType',
        'ap_ref_nbr' => 'getApRefNbr',
        'in_doc_type' => 'getInDocType',
        'in_ref_nbr' => 'getInRefNbr',
        'postpone_purchase_invoice_creation' => 'getPostponePurchaseInvoiceCreation'
    ];

    /**
     * Array of attributes where the key is the local name,
     * and the value is the original name
     *
     * @return array
     */
    public static function attributeMap()
    {
        return self::$attributeMap;
    }

    /**
     * Array of attributes to setter functions (for deserialization of responses)
     *
     * @return array
     */
    public static function setters()
    {
        return self::$setters;
    }

    /**
     * Array of attributes to getter functions (for serialization of requests)
     *
     * @return array
     */
    public static function getters()
    {
        return self::$getters;
    }

    /**
     * The original name of the model.
     *
     * @return string
     */
    public function getModelName()
    {
        return self::$swaggerModelName;
    }

    const OPERATION_INSERT = 'Insert';
    const OPERATION_UPDATE = 'Update';
    const OPERATION_DELETE = 'Delete';
    

    
    /**
     * Gets allowable values of the enum
     *
     * @return string[]
     */
    public function getOperationAllowableValues()
    {
        return [
            self::OPERATION_INSERT,
            self::OPERATION_UPDATE,
            self::OPERATION_DELETE,
        ];
    }
    

    /**
     * Associative array for storing property values
     *
     * @var mixed[]
     */
    protected $container = [];

    /**
     * Constructor
     *
     * @param mixed[] $data Associated array of property values
     *                      initializing the model
     */
    public function __construct(array $data = null)
    {
        $this->container['operation'] = isset($data['operation']) ? $data['operation'] : null;
        $this->container['line_nbr'] = isset($data['line_nbr']) ? $data['line_nbr'] : null;
        $this->container['landed_cost_code'] = isset($data['landed_cost_code']) ? $data['landed_cost_code'] : null;
        $this->container['description'] = isset($data['description']) ? $data['description'] : null;
        $this->container['purchase_invoice_nbr'] = isset($data['purchase_invoice_nbr']) ? $data['purchase_invoice_nbr'] : null;
        $this->container['supplier_id'] = isset($data['supplier_id']) ? $data['supplier_id'] : null;
        $this->container['location_id'] = isset($data['location_id']) ? $data['location_id'] : null;
        $this->container['ap_bill_date'] = isset($data['ap_bill_date']) ? $data['ap_bill_date'] : null;
        $this->container['currency'] = isset($data['currency']) ? $data['currency'] : null;
        $this->container['amount'] = isset($data['amount']) ? $data['amount'] : null;
        $this->container['tax_category'] = isset($data['tax_category']) ? $data['tax_category'] : null;
        $this->container['terms'] = isset($data['terms']) ? $data['terms'] : null;
        $this->container['inventory_id'] = isset($data['inventory_id']) ? $data['inventory_id'] : null;
        $this->container['ap_doc_type'] = isset($data['ap_doc_type']) ? $data['ap_doc_type'] : null;
        $this->container['ap_ref_nbr'] = isset($data['ap_ref_nbr']) ? $data['ap_ref_nbr'] : null;
        $this->container['in_doc_type'] = isset($data['in_doc_type']) ? $data['in_doc_type'] : null;
        $this->container['in_ref_nbr'] = isset($data['in_ref_nbr']) ? $data['in_ref_nbr'] : null;
        $this->container['postpone_purchase_invoice_creation'] = isset($data['postpone_purchase_invoice_creation']) ? $data['postpone_purchase_invoice_creation'] : null;
    }

    /**
     * Show all the invalid properties with reasons.
     *
     * @return array invalid properties with reasons
     */
    public function listInvalidProperties()
    {
        $invalidProperties = [];

        $allowedValues = $this->getOperationAllowableValues();
        if (!is_null($this->container['operation']) && !in_array($this->container['operation'], $allowedValues, true)) {
            $invalidProperties[] = sprintf(
                "invalid value for 'operation', must be one of '%s'",
                implode("', '", $allowedValues)
            );
        }

        return $invalidProperties;
    }

    /**
     * Validate all the properties in the model
     * return true if all passed
     *
     * @return bool True if all properties are valid
     */
    public function valid()
    {
        return count($this->listInvalidProperties()) === 0;
    }


    /**
     * Gets operation
     *
     * @return string
     */
    public function getOperation()
    {
        return $this->container['operation'];
    }

    /**
     * Sets operation
     *
     * @param string $operation operation
     *
     * @return $this
     */
    public function setOperation($operation)
    {
        $allowedValues = $this->getOperationAllowableValues();
        if (!is_null($operation) && !in_array($operation, $allowedValues, true)) {
            throw new \InvalidArgumentException(
                sprintf(
                    "Invalid value for 'operation', must be one of '%s'",
                    implode("', '", $allowedValues)
                )
            );
        }
        $this->container['operation'] = $operation;

        return $this;
    }

    /**
     * Gets line_nbr
     *
     * @return object
     */
    public function getLineNbr()
    {
        return $this->container['line_nbr'];
    }

    /**
     * Sets line_nbr
     *
     * @param object $line_nbr line_nbr
     *
     * @return $this
     */
    public function setLineNbr($line_nbr)
    {
        $this->container['line_nbr'] = $line_nbr;

        return $this;
    }

    /**
     * Gets landed_cost_code
     *
     * @return object
     */
    public function getLandedCostCode()
    {
        return $this->container['landed_cost_code'];
    }

    /**
     * Sets landed_cost_code
     *
     * @param object $landed_cost_code landed_cost_code
     *
     * @return $this
     */
    public function setLandedCostCode($landed_cost_code)
    {
        $this->container['landed_cost_code'] = $landed_cost_code;

        return $this;
    }

    /**
     * Gets description
     *
     * @return object
     */
    public function getDescription()
    {
        return $this->container['description'];
    }

    /**
     * Sets description
     *
     * @param object $description description
     *
     * @return $this
     */
    public function setDescription($description)
    {
        $this->container['description'] = $description;

        return $this;
    }

    /**
     * Gets purchase_invoice_nbr
     *
     * @return object
     */
    public function getPurchaseInvoiceNbr()
    {
        return $this->container['purchase_invoice_nbr'];
    }

    /**
     * Sets purchase_invoice_nbr
     *
     * @param object $purchase_invoice_nbr purchase_invoice_nbr
     *
     * @return $this
     */
    public function setPurchaseInvoiceNbr($purchase_invoice_nbr)
    {
        $this->container['purchase_invoice_nbr'] = $purchase_invoice_nbr;

        return $this;
    }

    /**
     * Gets supplier_id
     *
     * @return object
     */
    public function getSupplierId()
    {
        return $this->container['supplier_id'];
    }

    /**
     * Sets supplier_id
     *
     * @param object $supplier_id supplier_id
     *
     * @return $this
     */
    public function setSupplierId($supplier_id)
    {
        $this->container['supplier_id'] = $supplier_id;

        return $this;
    }

    /**
     * Gets location_id
     *
     * @return object
     */
    public function getLocationId()
    {
        return $this->container['location_id'];
    }

    /**
     * Sets location_id
     *
     * @param object $location_id location_id
     *
     * @return $this
     */
    public function setLocationId($location_id)
    {
        $this->container['location_id'] = $location_id;

        return $this;
    }

    /**
     * Gets ap_bill_date
     *
     * @return object
     */
    public function getApBillDate()
    {
        return $this->container['ap_bill_date'];
    }

    /**
     * Sets ap_bill_date
     *
     * @param object $ap_bill_date ap_bill_date
     *
     * @return $this
     */
    public function setApBillDate($ap_bill_date)
    {
        $this->container['ap_bill_date'] = $ap_bill_date;

        return $this;
    }

    /**
     * Gets currency
     *
     * @return object
     */
    public function getCurrency()
    {
        return $this->container['currency'];
    }

    /**
     * Sets currency
     *
     * @param object $currency currency
     *
     * @return $this
     */
    public function setCurrency($currency)
    {
        $this->container['currency'] = $currency;

        return $this;
    }

    /**
     * Gets amount
     *
     * @return object
     */
    public function getAmount()
    {
        return $this->container['amount'];
    }

    /**
     * Sets amount
     *
     * @param object $amount amount
     *
     * @return $this
     */
    public function setAmount($amount)
    {
        $this->container['amount'] = $amount;

        return $this;
    }

    /**
     * Gets tax_category
     *
     * @return object
     */
    public function getTaxCategory()
    {
        return $this->container['tax_category'];
    }

    /**
     * Sets tax_category
     *
     * @param object $tax_category tax_category
     *
     * @return $this
     */
    public function setTaxCategory($tax_category)
    {
        $this->container['tax_category'] = $tax_category;

        return $this;
    }

    /**
     * Gets terms
     *
     * @return object
     */
    public function getTerms()
    {
        return $this->container['terms'];
    }

    /**
     * Sets terms
     *
     * @param object $terms terms
     *
     * @return $this
     */
    public function setTerms($terms)
    {
        $this->container['terms'] = $terms;

        return $this;
    }

    /**
     * Gets inventory_id
     *
     * @return object
     */
    public function getInventoryId()
    {
        return $this->container['inventory_id'];
    }

    /**
     * Sets inventory_id
     *
     * @param object $inventory_id inventory_id
     *
     * @return $this
     */
    public function setInventoryId($inventory_id)
    {
        $this->container['inventory_id'] = $inventory_id;

        return $this;
    }

    /**
     * Gets ap_doc_type
     *
     * @return object
     */
    public function getApDocType()
    {
        return $this->container['ap_doc_type'];
    }

    /**
     * Sets ap_doc_type
     *
     * @param object $ap_doc_type ap_doc_type
     *
     * @return $this
     */
    public function setApDocType($ap_doc_type)
    {
        $this->container['ap_doc_type'] = $ap_doc_type;

        return $this;
    }

    /**
     * Gets ap_ref_nbr
     *
     * @return object
     */
    public function getApRefNbr()
    {
        return $this->container['ap_ref_nbr'];
    }

    /**
     * Sets ap_ref_nbr
     *
     * @param object $ap_ref_nbr ap_ref_nbr
     *
     * @return $this
     */
    public function setApRefNbr($ap_ref_nbr)
    {
        $this->container['ap_ref_nbr'] = $ap_ref_nbr;

        return $this;
    }

    /**
     * Gets in_doc_type
     *
     * @return object
     */
    public function getInDocType()
    {
        return $this->container['in_doc_type'];
    }

    /**
     * Sets in_doc_type
     *
     * @param object $in_doc_type in_doc_type
     *
     * @return $this
     */
    public function setInDocType($in_doc_type)
    {
        $this->container['in_doc_type'] = $in_doc_type;

        return $this;
    }

    /**
     * Gets in_ref_nbr
     *
     * @return object
     */
    public function getInRefNbr()
    {
        return $this->container['in_ref_nbr'];
    }

    /**
     * Sets in_ref_nbr
     *
     * @param object $in_ref_nbr in_ref_nbr
     *
     * @return $this
     */
    public function setInRefNbr($in_ref_nbr)
    {
        $this->container['in_ref_nbr'] = $in_ref_nbr;

        return $this;
    }

    /**
     * Gets postpone_purchase_invoice_creation
     *
     * @return object
     */
    public function getPostponePurchaseInvoiceCreation()
    {
        return $this->container['postpone_purchase_invoice_creation'];
    }

    /**
     * Sets postpone_purchase_invoice_creation
     *
     * @param object $postpone_purchase_invoice_creation postpone_purchase_invoice_creation
     *
     * @return $this
     */
    public function setPostponePurchaseInvoiceCreation($postpone_purchase_invoice_creation)
    {
        $this->container['postpone_purchase_invoice_creation'] = $postpone_purchase_invoice_creation;

        return $this;
    }
    /**
     * Returns true if offset exists. False otherwise.
     *
     * @param integer $offset Offset
     *
     * @return boolean
     */
    public function offsetExists($offset)
    {
        return isset($this->container[$offset]);
    }

    /**
     * Gets offset.
     *
     * @param integer $offset Offset
     *
     * @return mixed
     */
    public function offsetGet($offset)
    {
        return isset($this->container[$offset]) ? $this->container[$offset] : null;
    }

    /**
     * Sets value based on offset.
     *
     * @param integer $offset Offset
     * @param mixed   $value  Value to be set
     *
     * @return void
     */
    public function offsetSet($offset, $value)
    {
        if (is_null($offset)) {
            $this->container[] = $value;
        } else {
            $this->container[$offset] = $value;
        }
    }

    /**
     * Unsets offset.
     *
     * @param integer $offset Offset
     *
     * @return void
     */
    public function offsetUnset($offset)
    {
        unset($this->container[$offset]);
    }

    /**
     * Gets the string presentation of the object
     *
     * @return string
     */
    public function __toString()
    {
        if (defined('JSON_PRETTY_PRINT')) { // use JSON pretty print
            return json_encode(
                ObjectSerializer::sanitizeForSerialization($this),
                JSON_PRETTY_PRINT
            );
        }

        return json_encode(ObjectSerializer::sanitizeForSerialization($this));
    }
}


