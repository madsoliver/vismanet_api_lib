<?php
/**
 * SupplierUpdateDto
 *
 * PHP version 5
 *
 * @category Class
 * @package  Ekstralys\VismaNetApi
 * @author   Swagger Codegen team
 * @link     https://github.com/swagger-api/swagger-codegen
 */

/**
 * Visma Net API
 *
 * No description provided (generated by Swagger Codegen https://github.com/swagger-api/swagger-codegen)
 *
 * OpenAPI spec version: 8.43.00.1002
 * 
 * Generated by: https://github.com/swagger-api/swagger-codegen.git
 * Swagger Codegen version: 2.4.19
 */

/**
 * NOTE: This class is auto generated by the swagger code generator program.
 * https://github.com/swagger-api/swagger-codegen
 * Do not edit the class manually.
 */

namespace Ekstralys\VismaNetApi\Model;

use \ArrayAccess;
use \Ekstralys\VismaNetApi\ObjectSerializer;

/**
 * SupplierUpdateDto Class Doc Comment
 *
 * @category Class
 * @description This class represents a supplier in SupplierController. Used to create and update supplier.
 * @package  Ekstralys\VismaNetApi
 * @author   Swagger Codegen team
 * @link     https://github.com/swagger-api/swagger-codegen
 */
class SupplierUpdateDto implements ModelInterface, ArrayAccess
{
    const DISCRIMINATOR = null;

    /**
      * The original name of the model.
      *
      * @var string
      */
    protected static $swaggerModelName = 'SupplierUpdateDto';

    /**
      * Array of property to type mappings. Used for (de)serialization
      *
      * @var string[]
      */
    protected static $swaggerTypes = [
        'number' => 'object',
        'name' => 'object',
        'status' => 'object',
        'account_reference' => 'object',
        'parent_record_number' => 'object',
        'supplier_class_id' => 'object',
        'override_with_class_values' => 'bool',
        'credit_terms_id' => 'object',
        'document_language' => 'object',
        'currency_id' => 'object',
        'currency_override' => 'object',
        'currency_rate_override' => 'object',
        'payment_method_id' => 'object',
        'cash_account' => 'object',
        'payment_lead_time' => 'object',
        'payment_ref_display_mask' => 'object',
        'pay_separately' => 'object',
        'vat_registration_id' => 'object',
        'corporate_id' => 'object',
        'vat_zone_id' => 'object',
        'charge_bearer' => 'object',
        'account_used_for_payment' => 'object',
        'payment_by' => 'object',
        'main_address' => 'object',
        'main_contact' => 'object',
        'remit_address' => 'object',
        'remit_contact' => 'object',
        'supplier_address' => 'object',
        'supplier_contact' => 'object',
        'gl_accounts' => 'object',
        'supplier_payment_method_details' => '\Ekstralys\VismaNetApi\Model\SupplierPaymentMethodDetailUpdateDto[]',
        'attribute_lines' => '\Ekstralys\VismaNetApi\Model\AttributeLineUpdateDto[]',
        'retainage_cash_account_id' => 'object',
        'retainage_apply' => 'object',
        'retainage_pct' => 'object',
        'note' => 'object',
        'override_number_series' => 'object'
    ];

    /**
      * Array of property to format mappings. Used for (de)serialization
      *
      * @var string[]
      */
    protected static $swaggerFormats = [
        'number' => null,
        'name' => null,
        'status' => null,
        'account_reference' => null,
        'parent_record_number' => null,
        'supplier_class_id' => null,
        'override_with_class_values' => null,
        'credit_terms_id' => null,
        'document_language' => null,
        'currency_id' => null,
        'currency_override' => null,
        'currency_rate_override' => null,
        'payment_method_id' => null,
        'cash_account' => null,
        'payment_lead_time' => null,
        'payment_ref_display_mask' => null,
        'pay_separately' => null,
        'vat_registration_id' => null,
        'corporate_id' => null,
        'vat_zone_id' => null,
        'charge_bearer' => null,
        'account_used_for_payment' => null,
        'payment_by' => null,
        'main_address' => null,
        'main_contact' => null,
        'remit_address' => null,
        'remit_contact' => null,
        'supplier_address' => null,
        'supplier_contact' => null,
        'gl_accounts' => null,
        'supplier_payment_method_details' => null,
        'attribute_lines' => null,
        'retainage_cash_account_id' => null,
        'retainage_apply' => null,
        'retainage_pct' => null,
        'note' => null,
        'override_number_series' => null
    ];

    /**
     * Array of property to type mappings. Used for (de)serialization
     *
     * @return array
     */
    public static function swaggerTypes()
    {
        return self::$swaggerTypes;
    }

    /**
     * Array of property to format mappings. Used for (de)serialization
     *
     * @return array
     */
    public static function swaggerFormats()
    {
        return self::$swaggerFormats;
    }

    /**
     * Array of attributes where the key is the local name,
     * and the value is the original name
     *
     * @var string[]
     */
    protected static $attributeMap = [
        'number' => 'number',
        'name' => 'name',
        'status' => 'status',
        'account_reference' => 'accountReference',
        'parent_record_number' => 'parentRecordNumber',
        'supplier_class_id' => 'supplierClassId',
        'override_with_class_values' => 'overrideWithClassValues',
        'credit_terms_id' => 'creditTermsId',
        'document_language' => 'documentLanguage',
        'currency_id' => 'currencyId',
        'currency_override' => 'currencyOverride',
        'currency_rate_override' => 'currencyRateOverride',
        'payment_method_id' => 'paymentMethodId',
        'cash_account' => 'cashAccount',
        'payment_lead_time' => 'paymentLeadTime',
        'payment_ref_display_mask' => 'paymentRefDisplayMask',
        'pay_separately' => 'paySeparately',
        'vat_registration_id' => 'vatRegistrationId',
        'corporate_id' => 'corporateId',
        'vat_zone_id' => 'vatZoneId',
        'charge_bearer' => 'chargeBearer',
        'account_used_for_payment' => 'accountUsedForPayment',
        'payment_by' => 'paymentBy',
        'main_address' => 'mainAddress',
        'main_contact' => 'mainContact',
        'remit_address' => 'remitAddress',
        'remit_contact' => 'remitContact',
        'supplier_address' => 'supplierAddress',
        'supplier_contact' => 'supplierContact',
        'gl_accounts' => 'glAccounts',
        'supplier_payment_method_details' => 'supplierPaymentMethodDetails',
        'attribute_lines' => 'attributeLines',
        'retainage_cash_account_id' => 'retainageCashAccountID',
        'retainage_apply' => 'retainageApply',
        'retainage_pct' => 'retainagePct',
        'note' => 'note',
        'override_number_series' => 'overrideNumberSeries'
    ];

    /**
     * Array of attributes to setter functions (for deserialization of responses)
     *
     * @var string[]
     */
    protected static $setters = [
        'number' => 'setNumber',
        'name' => 'setName',
        'status' => 'setStatus',
        'account_reference' => 'setAccountReference',
        'parent_record_number' => 'setParentRecordNumber',
        'supplier_class_id' => 'setSupplierClassId',
        'override_with_class_values' => 'setOverrideWithClassValues',
        'credit_terms_id' => 'setCreditTermsId',
        'document_language' => 'setDocumentLanguage',
        'currency_id' => 'setCurrencyId',
        'currency_override' => 'setCurrencyOverride',
        'currency_rate_override' => 'setCurrencyRateOverride',
        'payment_method_id' => 'setPaymentMethodId',
        'cash_account' => 'setCashAccount',
        'payment_lead_time' => 'setPaymentLeadTime',
        'payment_ref_display_mask' => 'setPaymentRefDisplayMask',
        'pay_separately' => 'setPaySeparately',
        'vat_registration_id' => 'setVatRegistrationId',
        'corporate_id' => 'setCorporateId',
        'vat_zone_id' => 'setVatZoneId',
        'charge_bearer' => 'setChargeBearer',
        'account_used_for_payment' => 'setAccountUsedForPayment',
        'payment_by' => 'setPaymentBy',
        'main_address' => 'setMainAddress',
        'main_contact' => 'setMainContact',
        'remit_address' => 'setRemitAddress',
        'remit_contact' => 'setRemitContact',
        'supplier_address' => 'setSupplierAddress',
        'supplier_contact' => 'setSupplierContact',
        'gl_accounts' => 'setGlAccounts',
        'supplier_payment_method_details' => 'setSupplierPaymentMethodDetails',
        'attribute_lines' => 'setAttributeLines',
        'retainage_cash_account_id' => 'setRetainageCashAccountId',
        'retainage_apply' => 'setRetainageApply',
        'retainage_pct' => 'setRetainagePct',
        'note' => 'setNote',
        'override_number_series' => 'setOverrideNumberSeries'
    ];

    /**
     * Array of attributes to getter functions (for serialization of requests)
     *
     * @var string[]
     */
    protected static $getters = [
        'number' => 'getNumber',
        'name' => 'getName',
        'status' => 'getStatus',
        'account_reference' => 'getAccountReference',
        'parent_record_number' => 'getParentRecordNumber',
        'supplier_class_id' => 'getSupplierClassId',
        'override_with_class_values' => 'getOverrideWithClassValues',
        'credit_terms_id' => 'getCreditTermsId',
        'document_language' => 'getDocumentLanguage',
        'currency_id' => 'getCurrencyId',
        'currency_override' => 'getCurrencyOverride',
        'currency_rate_override' => 'getCurrencyRateOverride',
        'payment_method_id' => 'getPaymentMethodId',
        'cash_account' => 'getCashAccount',
        'payment_lead_time' => 'getPaymentLeadTime',
        'payment_ref_display_mask' => 'getPaymentRefDisplayMask',
        'pay_separately' => 'getPaySeparately',
        'vat_registration_id' => 'getVatRegistrationId',
        'corporate_id' => 'getCorporateId',
        'vat_zone_id' => 'getVatZoneId',
        'charge_bearer' => 'getChargeBearer',
        'account_used_for_payment' => 'getAccountUsedForPayment',
        'payment_by' => 'getPaymentBy',
        'main_address' => 'getMainAddress',
        'main_contact' => 'getMainContact',
        'remit_address' => 'getRemitAddress',
        'remit_contact' => 'getRemitContact',
        'supplier_address' => 'getSupplierAddress',
        'supplier_contact' => 'getSupplierContact',
        'gl_accounts' => 'getGlAccounts',
        'supplier_payment_method_details' => 'getSupplierPaymentMethodDetails',
        'attribute_lines' => 'getAttributeLines',
        'retainage_cash_account_id' => 'getRetainageCashAccountId',
        'retainage_apply' => 'getRetainageApply',
        'retainage_pct' => 'getRetainagePct',
        'note' => 'getNote',
        'override_number_series' => 'getOverrideNumberSeries'
    ];

    /**
     * Array of attributes where the key is the local name,
     * and the value is the original name
     *
     * @return array
     */
    public static function attributeMap()
    {
        return self::$attributeMap;
    }

    /**
     * Array of attributes to setter functions (for deserialization of responses)
     *
     * @return array
     */
    public static function setters()
    {
        return self::$setters;
    }

    /**
     * Array of attributes to getter functions (for serialization of requests)
     *
     * @return array
     */
    public static function getters()
    {
        return self::$getters;
    }

    /**
     * The original name of the model.
     *
     * @return string
     */
    public function getModelName()
    {
        return self::$swaggerModelName;
    }

    

    

    /**
     * Associative array for storing property values
     *
     * @var mixed[]
     */
    protected $container = [];

    /**
     * Constructor
     *
     * @param mixed[] $data Associated array of property values
     *                      initializing the model
     */
    public function __construct(array $data = null)
    {
        $this->container['number'] = isset($data['number']) ? $data['number'] : null;
        $this->container['name'] = isset($data['name']) ? $data['name'] : null;
        $this->container['status'] = isset($data['status']) ? $data['status'] : null;
        $this->container['account_reference'] = isset($data['account_reference']) ? $data['account_reference'] : null;
        $this->container['parent_record_number'] = isset($data['parent_record_number']) ? $data['parent_record_number'] : null;
        $this->container['supplier_class_id'] = isset($data['supplier_class_id']) ? $data['supplier_class_id'] : null;
        $this->container['override_with_class_values'] = isset($data['override_with_class_values']) ? $data['override_with_class_values'] : null;
        $this->container['credit_terms_id'] = isset($data['credit_terms_id']) ? $data['credit_terms_id'] : null;
        $this->container['document_language'] = isset($data['document_language']) ? $data['document_language'] : null;
        $this->container['currency_id'] = isset($data['currency_id']) ? $data['currency_id'] : null;
        $this->container['currency_override'] = isset($data['currency_override']) ? $data['currency_override'] : null;
        $this->container['currency_rate_override'] = isset($data['currency_rate_override']) ? $data['currency_rate_override'] : null;
        $this->container['payment_method_id'] = isset($data['payment_method_id']) ? $data['payment_method_id'] : null;
        $this->container['cash_account'] = isset($data['cash_account']) ? $data['cash_account'] : null;
        $this->container['payment_lead_time'] = isset($data['payment_lead_time']) ? $data['payment_lead_time'] : null;
        $this->container['payment_ref_display_mask'] = isset($data['payment_ref_display_mask']) ? $data['payment_ref_display_mask'] : null;
        $this->container['pay_separately'] = isset($data['pay_separately']) ? $data['pay_separately'] : null;
        $this->container['vat_registration_id'] = isset($data['vat_registration_id']) ? $data['vat_registration_id'] : null;
        $this->container['corporate_id'] = isset($data['corporate_id']) ? $data['corporate_id'] : null;
        $this->container['vat_zone_id'] = isset($data['vat_zone_id']) ? $data['vat_zone_id'] : null;
        $this->container['charge_bearer'] = isset($data['charge_bearer']) ? $data['charge_bearer'] : null;
        $this->container['account_used_for_payment'] = isset($data['account_used_for_payment']) ? $data['account_used_for_payment'] : null;
        $this->container['payment_by'] = isset($data['payment_by']) ? $data['payment_by'] : null;
        $this->container['main_address'] = isset($data['main_address']) ? $data['main_address'] : null;
        $this->container['main_contact'] = isset($data['main_contact']) ? $data['main_contact'] : null;
        $this->container['remit_address'] = isset($data['remit_address']) ? $data['remit_address'] : null;
        $this->container['remit_contact'] = isset($data['remit_contact']) ? $data['remit_contact'] : null;
        $this->container['supplier_address'] = isset($data['supplier_address']) ? $data['supplier_address'] : null;
        $this->container['supplier_contact'] = isset($data['supplier_contact']) ? $data['supplier_contact'] : null;
        $this->container['gl_accounts'] = isset($data['gl_accounts']) ? $data['gl_accounts'] : null;
        $this->container['supplier_payment_method_details'] = isset($data['supplier_payment_method_details']) ? $data['supplier_payment_method_details'] : null;
        $this->container['attribute_lines'] = isset($data['attribute_lines']) ? $data['attribute_lines'] : null;
        $this->container['retainage_cash_account_id'] = isset($data['retainage_cash_account_id']) ? $data['retainage_cash_account_id'] : null;
        $this->container['retainage_apply'] = isset($data['retainage_apply']) ? $data['retainage_apply'] : null;
        $this->container['retainage_pct'] = isset($data['retainage_pct']) ? $data['retainage_pct'] : null;
        $this->container['note'] = isset($data['note']) ? $data['note'] : null;
        $this->container['override_number_series'] = isset($data['override_number_series']) ? $data['override_number_series'] : null;
    }

    /**
     * Show all the invalid properties with reasons.
     *
     * @return array invalid properties with reasons
     */
    public function listInvalidProperties()
    {
        $invalidProperties = [];

        return $invalidProperties;
    }

    /**
     * Validate all the properties in the model
     * return true if all passed
     *
     * @return bool True if all properties are valid
     */
    public function valid()
    {
        return count($this->listInvalidProperties()) === 0;
    }


    /**
     * Gets number
     *
     * @return object
     */
    public function getNumber()
    {
        return $this->container['number'];
    }

    /**
     * Sets number
     *
     * @param object $number number
     *
     * @return $this
     */
    public function setNumber($number)
    {
        $this->container['number'] = $number;

        return $this;
    }

    /**
     * Gets name
     *
     * @return object
     */
    public function getName()
    {
        return $this->container['name'];
    }

    /**
     * Sets name
     *
     * @param object $name name
     *
     * @return $this
     */
    public function setName($name)
    {
        $this->container['name'] = $name;

        return $this;
    }

    /**
     * Gets status
     *
     * @return object
     */
    public function getStatus()
    {
        return $this->container['status'];
    }

    /**
     * Sets status
     *
     * @param object $status status
     *
     * @return $this
     */
    public function setStatus($status)
    {
        $this->container['status'] = $status;

        return $this;
    }

    /**
     * Gets account_reference
     *
     * @return object
     */
    public function getAccountReference()
    {
        return $this->container['account_reference'];
    }

    /**
     * Sets account_reference
     *
     * @param object $account_reference account_reference
     *
     * @return $this
     */
    public function setAccountReference($account_reference)
    {
        $this->container['account_reference'] = $account_reference;

        return $this;
    }

    /**
     * Gets parent_record_number
     *
     * @return object
     */
    public function getParentRecordNumber()
    {
        return $this->container['parent_record_number'];
    }

    /**
     * Sets parent_record_number
     *
     * @param object $parent_record_number parent_record_number
     *
     * @return $this
     */
    public function setParentRecordNumber($parent_record_number)
    {
        $this->container['parent_record_number'] = $parent_record_number;

        return $this;
    }

    /**
     * Gets supplier_class_id
     *
     * @return object
     */
    public function getSupplierClassId()
    {
        return $this->container['supplier_class_id'];
    }

    /**
     * Sets supplier_class_id
     *
     * @param object $supplier_class_id supplier_class_id
     *
     * @return $this
     */
    public function setSupplierClassId($supplier_class_id)
    {
        $this->container['supplier_class_id'] = $supplier_class_id;

        return $this;
    }

    /**
     * Gets override_with_class_values
     *
     * @return bool
     */
    public function getOverrideWithClassValues()
    {
        return $this->container['override_with_class_values'];
    }

    /**
     * Sets override_with_class_values
     *
     * @param bool $override_with_class_values override_with_class_values
     *
     * @return $this
     */
    public function setOverrideWithClassValues($override_with_class_values)
    {
        $this->container['override_with_class_values'] = $override_with_class_values;

        return $this;
    }

    /**
     * Gets credit_terms_id
     *
     * @return object
     */
    public function getCreditTermsId()
    {
        return $this->container['credit_terms_id'];
    }

    /**
     * Sets credit_terms_id
     *
     * @param object $credit_terms_id credit_terms_id
     *
     * @return $this
     */
    public function setCreditTermsId($credit_terms_id)
    {
        $this->container['credit_terms_id'] = $credit_terms_id;

        return $this;
    }

    /**
     * Gets document_language
     *
     * @return object
     */
    public function getDocumentLanguage()
    {
        return $this->container['document_language'];
    }

    /**
     * Sets document_language
     *
     * @param object $document_language document_language
     *
     * @return $this
     */
    public function setDocumentLanguage($document_language)
    {
        $this->container['document_language'] = $document_language;

        return $this;
    }

    /**
     * Gets currency_id
     *
     * @return object
     */
    public function getCurrencyId()
    {
        return $this->container['currency_id'];
    }

    /**
     * Sets currency_id
     *
     * @param object $currency_id currency_id
     *
     * @return $this
     */
    public function setCurrencyId($currency_id)
    {
        $this->container['currency_id'] = $currency_id;

        return $this;
    }

    /**
     * Gets currency_override
     *
     * @return object
     */
    public function getCurrencyOverride()
    {
        return $this->container['currency_override'];
    }

    /**
     * Sets currency_override
     *
     * @param object $currency_override currency_override
     *
     * @return $this
     */
    public function setCurrencyOverride($currency_override)
    {
        $this->container['currency_override'] = $currency_override;

        return $this;
    }

    /**
     * Gets currency_rate_override
     *
     * @return object
     */
    public function getCurrencyRateOverride()
    {
        return $this->container['currency_rate_override'];
    }

    /**
     * Sets currency_rate_override
     *
     * @param object $currency_rate_override currency_rate_override
     *
     * @return $this
     */
    public function setCurrencyRateOverride($currency_rate_override)
    {
        $this->container['currency_rate_override'] = $currency_rate_override;

        return $this;
    }

    /**
     * Gets payment_method_id
     *
     * @return object
     */
    public function getPaymentMethodId()
    {
        return $this->container['payment_method_id'];
    }

    /**
     * Sets payment_method_id
     *
     * @param object $payment_method_id payment_method_id
     *
     * @return $this
     */
    public function setPaymentMethodId($payment_method_id)
    {
        $this->container['payment_method_id'] = $payment_method_id;

        return $this;
    }

    /**
     * Gets cash_account
     *
     * @return object
     */
    public function getCashAccount()
    {
        return $this->container['cash_account'];
    }

    /**
     * Sets cash_account
     *
     * @param object $cash_account cash_account
     *
     * @return $this
     */
    public function setCashAccount($cash_account)
    {
        $this->container['cash_account'] = $cash_account;

        return $this;
    }

    /**
     * Gets payment_lead_time
     *
     * @return object
     */
    public function getPaymentLeadTime()
    {
        return $this->container['payment_lead_time'];
    }

    /**
     * Sets payment_lead_time
     *
     * @param object $payment_lead_time payment_lead_time
     *
     * @return $this
     */
    public function setPaymentLeadTime($payment_lead_time)
    {
        $this->container['payment_lead_time'] = $payment_lead_time;

        return $this;
    }

    /**
     * Gets payment_ref_display_mask
     *
     * @return object
     */
    public function getPaymentRefDisplayMask()
    {
        return $this->container['payment_ref_display_mask'];
    }

    /**
     * Sets payment_ref_display_mask
     *
     * @param object $payment_ref_display_mask payment_ref_display_mask
     *
     * @return $this
     */
    public function setPaymentRefDisplayMask($payment_ref_display_mask)
    {
        $this->container['payment_ref_display_mask'] = $payment_ref_display_mask;

        return $this;
    }

    /**
     * Gets pay_separately
     *
     * @return object
     */
    public function getPaySeparately()
    {
        return $this->container['pay_separately'];
    }

    /**
     * Sets pay_separately
     *
     * @param object $pay_separately pay_separately
     *
     * @return $this
     */
    public function setPaySeparately($pay_separately)
    {
        $this->container['pay_separately'] = $pay_separately;

        return $this;
    }

    /**
     * Gets vat_registration_id
     *
     * @return object
     */
    public function getVatRegistrationId()
    {
        return $this->container['vat_registration_id'];
    }

    /**
     * Sets vat_registration_id
     *
     * @param object $vat_registration_id vat_registration_id
     *
     * @return $this
     */
    public function setVatRegistrationId($vat_registration_id)
    {
        $this->container['vat_registration_id'] = $vat_registration_id;

        return $this;
    }

    /**
     * Gets corporate_id
     *
     * @return object
     */
    public function getCorporateId()
    {
        return $this->container['corporate_id'];
    }

    /**
     * Sets corporate_id
     *
     * @param object $corporate_id corporate_id
     *
     * @return $this
     */
    public function setCorporateId($corporate_id)
    {
        $this->container['corporate_id'] = $corporate_id;

        return $this;
    }

    /**
     * Gets vat_zone_id
     *
     * @return object
     */
    public function getVatZoneId()
    {
        return $this->container['vat_zone_id'];
    }

    /**
     * Sets vat_zone_id
     *
     * @param object $vat_zone_id vat_zone_id
     *
     * @return $this
     */
    public function setVatZoneId($vat_zone_id)
    {
        $this->container['vat_zone_id'] = $vat_zone_id;

        return $this;
    }

    /**
     * Gets charge_bearer
     *
     * @return object
     */
    public function getChargeBearer()
    {
        return $this->container['charge_bearer'];
    }

    /**
     * Sets charge_bearer
     *
     * @param object $charge_bearer charge_bearer
     *
     * @return $this
     */
    public function setChargeBearer($charge_bearer)
    {
        $this->container['charge_bearer'] = $charge_bearer;

        return $this;
    }

    /**
     * Gets account_used_for_payment
     *
     * @return object
     */
    public function getAccountUsedForPayment()
    {
        return $this->container['account_used_for_payment'];
    }

    /**
     * Sets account_used_for_payment
     *
     * @param object $account_used_for_payment account_used_for_payment
     *
     * @return $this
     */
    public function setAccountUsedForPayment($account_used_for_payment)
    {
        $this->container['account_used_for_payment'] = $account_used_for_payment;

        return $this;
    }

    /**
     * Gets payment_by
     *
     * @return object
     */
    public function getPaymentBy()
    {
        return $this->container['payment_by'];
    }

    /**
     * Sets payment_by
     *
     * @param object $payment_by payment_by
     *
     * @return $this
     */
    public function setPaymentBy($payment_by)
    {
        $this->container['payment_by'] = $payment_by;

        return $this;
    }

    /**
     * Gets main_address
     *
     * @return object
     */
    public function getMainAddress()
    {
        return $this->container['main_address'];
    }

    /**
     * Sets main_address
     *
     * @param object $main_address main_address
     *
     * @return $this
     */
    public function setMainAddress($main_address)
    {
        $this->container['main_address'] = $main_address;

        return $this;
    }

    /**
     * Gets main_contact
     *
     * @return object
     */
    public function getMainContact()
    {
        return $this->container['main_contact'];
    }

    /**
     * Sets main_contact
     *
     * @param object $main_contact main_contact
     *
     * @return $this
     */
    public function setMainContact($main_contact)
    {
        $this->container['main_contact'] = $main_contact;

        return $this;
    }

    /**
     * Gets remit_address
     *
     * @return object
     */
    public function getRemitAddress()
    {
        return $this->container['remit_address'];
    }

    /**
     * Sets remit_address
     *
     * @param object $remit_address remit_address
     *
     * @return $this
     */
    public function setRemitAddress($remit_address)
    {
        $this->container['remit_address'] = $remit_address;

        return $this;
    }

    /**
     * Gets remit_contact
     *
     * @return object
     */
    public function getRemitContact()
    {
        return $this->container['remit_contact'];
    }

    /**
     * Sets remit_contact
     *
     * @param object $remit_contact remit_contact
     *
     * @return $this
     */
    public function setRemitContact($remit_contact)
    {
        $this->container['remit_contact'] = $remit_contact;

        return $this;
    }

    /**
     * Gets supplier_address
     *
     * @return object
     */
    public function getSupplierAddress()
    {
        return $this->container['supplier_address'];
    }

    /**
     * Sets supplier_address
     *
     * @param object $supplier_address supplier_address
     *
     * @return $this
     */
    public function setSupplierAddress($supplier_address)
    {
        $this->container['supplier_address'] = $supplier_address;

        return $this;
    }

    /**
     * Gets supplier_contact
     *
     * @return object
     */
    public function getSupplierContact()
    {
        return $this->container['supplier_contact'];
    }

    /**
     * Sets supplier_contact
     *
     * @param object $supplier_contact supplier_contact
     *
     * @return $this
     */
    public function setSupplierContact($supplier_contact)
    {
        $this->container['supplier_contact'] = $supplier_contact;

        return $this;
    }

    /**
     * Gets gl_accounts
     *
     * @return object
     */
    public function getGlAccounts()
    {
        return $this->container['gl_accounts'];
    }

    /**
     * Sets gl_accounts
     *
     * @param object $gl_accounts gl_accounts
     *
     * @return $this
     */
    public function setGlAccounts($gl_accounts)
    {
        $this->container['gl_accounts'] = $gl_accounts;

        return $this;
    }

    /**
     * Gets supplier_payment_method_details
     *
     * @return \Ekstralys\VismaNetApi\Model\SupplierPaymentMethodDetailUpdateDto[]
     */
    public function getSupplierPaymentMethodDetails()
    {
        return $this->container['supplier_payment_method_details'];
    }

    /**
     * Sets supplier_payment_method_details
     *
     * @param \Ekstralys\VismaNetApi\Model\SupplierPaymentMethodDetailUpdateDto[] $supplier_payment_method_details supplier_payment_method_details
     *
     * @return $this
     */
    public function setSupplierPaymentMethodDetails($supplier_payment_method_details)
    {
        $this->container['supplier_payment_method_details'] = $supplier_payment_method_details;

        return $this;
    }

    /**
     * Gets attribute_lines
     *
     * @return \Ekstralys\VismaNetApi\Model\AttributeLineUpdateDto[]
     */
    public function getAttributeLines()
    {
        return $this->container['attribute_lines'];
    }

    /**
     * Sets attribute_lines
     *
     * @param \Ekstralys\VismaNetApi\Model\AttributeLineUpdateDto[] $attribute_lines attribute_lines
     *
     * @return $this
     */
    public function setAttributeLines($attribute_lines)
    {
        $this->container['attribute_lines'] = $attribute_lines;

        return $this;
    }

    /**
     * Gets retainage_cash_account_id
     *
     * @return object
     */
    public function getRetainageCashAccountId()
    {
        return $this->container['retainage_cash_account_id'];
    }

    /**
     * Sets retainage_cash_account_id
     *
     * @param object $retainage_cash_account_id retainage_cash_account_id
     *
     * @return $this
     */
    public function setRetainageCashAccountId($retainage_cash_account_id)
    {
        $this->container['retainage_cash_account_id'] = $retainage_cash_account_id;

        return $this;
    }

    /**
     * Gets retainage_apply
     *
     * @return object
     */
    public function getRetainageApply()
    {
        return $this->container['retainage_apply'];
    }

    /**
     * Sets retainage_apply
     *
     * @param object $retainage_apply retainage_apply
     *
     * @return $this
     */
    public function setRetainageApply($retainage_apply)
    {
        $this->container['retainage_apply'] = $retainage_apply;

        return $this;
    }

    /**
     * Gets retainage_pct
     *
     * @return object
     */
    public function getRetainagePct()
    {
        return $this->container['retainage_pct'];
    }

    /**
     * Sets retainage_pct
     *
     * @param object $retainage_pct retainage_pct
     *
     * @return $this
     */
    public function setRetainagePct($retainage_pct)
    {
        $this->container['retainage_pct'] = $retainage_pct;

        return $this;
    }

    /**
     * Gets note
     *
     * @return object
     */
    public function getNote()
    {
        return $this->container['note'];
    }

    /**
     * Sets note
     *
     * @param object $note note
     *
     * @return $this
     */
    public function setNote($note)
    {
        $this->container['note'] = $note;

        return $this;
    }

    /**
     * Gets override_number_series
     *
     * @return object
     */
    public function getOverrideNumberSeries()
    {
        return $this->container['override_number_series'];
    }

    /**
     * Sets override_number_series
     *
     * @param object $override_number_series override_number_series
     *
     * @return $this
     */
    public function setOverrideNumberSeries($override_number_series)
    {
        $this->container['override_number_series'] = $override_number_series;

        return $this;
    }
    /**
     * Returns true if offset exists. False otherwise.
     *
     * @param integer $offset Offset
     *
     * @return boolean
     */
    public function offsetExists($offset)
    {
        return isset($this->container[$offset]);
    }

    /**
     * Gets offset.
     *
     * @param integer $offset Offset
     *
     * @return mixed
     */
    public function offsetGet($offset)
    {
        return isset($this->container[$offset]) ? $this->container[$offset] : null;
    }

    /**
     * Sets value based on offset.
     *
     * @param integer $offset Offset
     * @param mixed   $value  Value to be set
     *
     * @return void
     */
    public function offsetSet($offset, $value)
    {
        if (is_null($offset)) {
            $this->container[] = $value;
        } else {
            $this->container[$offset] = $value;
        }
    }

    /**
     * Unsets offset.
     *
     * @param integer $offset Offset
     *
     * @return void
     */
    public function offsetUnset($offset)
    {
        unset($this->container[$offset]);
    }

    /**
     * Gets the string presentation of the object
     *
     * @return string
     */
    public function __toString()
    {
        if (defined('JSON_PRETTY_PRINT')) { // use JSON pretty print
            return json_encode(
                ObjectSerializer::sanitizeForSerialization($this),
                JSON_PRETTY_PRINT
            );
        }

        return json_encode(ObjectSerializer::sanitizeForSerialization($this));
    }
}


