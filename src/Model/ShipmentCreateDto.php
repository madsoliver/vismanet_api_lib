<?php
/**
 * ShipmentCreateDto
 *
 * PHP version 5
 *
 * @category Class
 * @package  Ekstralys\VismaNetApi
 * @author   Swagger Codegen team
 * @link     https://github.com/swagger-api/swagger-codegen
 */

/**
 * Visma Net API
 *
 * No description provided (generated by Swagger Codegen https://github.com/swagger-api/swagger-codegen)
 *
 * OpenAPI spec version: 8.43.00.1002
 * 
 * Generated by: https://github.com/swagger-api/swagger-codegen.git
 * Swagger Codegen version: 2.4.19
 */

/**
 * NOTE: This class is auto generated by the swagger code generator program.
 * https://github.com/swagger-api/swagger-codegen
 * Do not edit the class manually.
 */

namespace Ekstralys\VismaNetApi\Model;

use \ArrayAccess;
use \Ekstralys\VismaNetApi\ObjectSerializer;

/**
 * ShipmentCreateDto Class Doc Comment
 *
 * @category Class
 * @package  Ekstralys\VismaNetApi
 * @author   Swagger Codegen team
 * @link     https://github.com/swagger-api/swagger-codegen
 */
class ShipmentCreateDto implements ModelInterface, ArrayAccess
{
    const DISCRIMINATOR = null;

    /**
      * The original name of the model.
      *
      * @var string
      */
    protected static $swaggerModelName = 'ShipmentCreateDto';

    /**
      * Array of property to type mappings. Used for (de)serialization
      *
      * @var string[]
      */
    protected static $swaggerTypes = [
        'shipment_type' => 'object',
        'operation' => 'object',
        'shipment_date' => 'object',
        'location' => 'object',
        'customer' => 'object',
        'owner' => 'object',
        'hold' => 'object',
        'from_warehouse' => 'object',
        'to_warehouse' => 'object',
        'control_quantity' => 'object',
        'override_contact' => 'object',
        'business_name' => 'object',
        'attention' => 'object',
        'phone1' => 'object',
        'email' => 'object',
        'override_address' => 'object',
        'address_line1' => 'object',
        'address_line2' => 'object',
        'city' => 'object',
        'country' => 'object',
        'county' => 'object',
        'postal_code' => 'object',
        'ship_via' => 'object',
        'fob_point' => 'object',
        'shipping_terms' => 'object',
        'shipping_zone' => 'object',
        'residential_delivery' => 'object',
        'saturday_delivery' => 'object',
        'use_customer_account' => 'object',
        'insurance' => 'object',
        'freight_amt' => 'object',
        'freight_cost' => 'object',
        'transaction_type' => 'object',
        'mode_of_trasport' => 'object',
        'container' => 'object',
        'note' => 'object',
        'shipment_detail_lines' => '\Ekstralys\VismaNetApi\Model\ShipmentDetailLineUpdateDto[]',
        'shipment_package_lines' => '\Ekstralys\VismaNetApi\Model\ShipmentPackageLineUpdateDto[]'
    ];

    /**
      * Array of property to format mappings. Used for (de)serialization
      *
      * @var string[]
      */
    protected static $swaggerFormats = [
        'shipment_type' => null,
        'operation' => null,
        'shipment_date' => null,
        'location' => null,
        'customer' => null,
        'owner' => null,
        'hold' => null,
        'from_warehouse' => null,
        'to_warehouse' => null,
        'control_quantity' => null,
        'override_contact' => null,
        'business_name' => null,
        'attention' => null,
        'phone1' => null,
        'email' => null,
        'override_address' => null,
        'address_line1' => null,
        'address_line2' => null,
        'city' => null,
        'country' => null,
        'county' => null,
        'postal_code' => null,
        'ship_via' => null,
        'fob_point' => null,
        'shipping_terms' => null,
        'shipping_zone' => null,
        'residential_delivery' => null,
        'saturday_delivery' => null,
        'use_customer_account' => null,
        'insurance' => null,
        'freight_amt' => null,
        'freight_cost' => null,
        'transaction_type' => null,
        'mode_of_trasport' => null,
        'container' => null,
        'note' => null,
        'shipment_detail_lines' => null,
        'shipment_package_lines' => null
    ];

    /**
     * Array of property to type mappings. Used for (de)serialization
     *
     * @return array
     */
    public static function swaggerTypes()
    {
        return self::$swaggerTypes;
    }

    /**
     * Array of property to format mappings. Used for (de)serialization
     *
     * @return array
     */
    public static function swaggerFormats()
    {
        return self::$swaggerFormats;
    }

    /**
     * Array of attributes where the key is the local name,
     * and the value is the original name
     *
     * @var string[]
     */
    protected static $attributeMap = [
        'shipment_type' => 'shipmentType',
        'operation' => 'operation',
        'shipment_date' => 'shipmentDate',
        'location' => 'location',
        'customer' => 'customer',
        'owner' => 'owner',
        'hold' => 'hold',
        'from_warehouse' => 'fromWarehouse',
        'to_warehouse' => 'toWarehouse',
        'control_quantity' => 'controlQuantity',
        'override_contact' => 'overrideContact',
        'business_name' => 'businessName',
        'attention' => 'attention',
        'phone1' => 'phone1',
        'email' => 'email',
        'override_address' => 'overrideAddress',
        'address_line1' => 'addressLine1',
        'address_line2' => 'addressLine2',
        'city' => 'city',
        'country' => 'country',
        'county' => 'county',
        'postal_code' => 'postalCode',
        'ship_via' => 'shipVia',
        'fob_point' => 'fobPoint',
        'shipping_terms' => 'shippingTerms',
        'shipping_zone' => 'shippingZone',
        'residential_delivery' => 'residentialDelivery',
        'saturday_delivery' => 'saturdayDelivery',
        'use_customer_account' => 'useCustomerAccount',
        'insurance' => 'insurance',
        'freight_amt' => 'freightAmt',
        'freight_cost' => 'freightCost',
        'transaction_type' => 'transactionType',
        'mode_of_trasport' => 'modeOfTrasport',
        'container' => 'container',
        'note' => 'note',
        'shipment_detail_lines' => 'shipmentDetailLines',
        'shipment_package_lines' => 'shipmentPackageLines'
    ];

    /**
     * Array of attributes to setter functions (for deserialization of responses)
     *
     * @var string[]
     */
    protected static $setters = [
        'shipment_type' => 'setShipmentType',
        'operation' => 'setOperation',
        'shipment_date' => 'setShipmentDate',
        'location' => 'setLocation',
        'customer' => 'setCustomer',
        'owner' => 'setOwner',
        'hold' => 'setHold',
        'from_warehouse' => 'setFromWarehouse',
        'to_warehouse' => 'setToWarehouse',
        'control_quantity' => 'setControlQuantity',
        'override_contact' => 'setOverrideContact',
        'business_name' => 'setBusinessName',
        'attention' => 'setAttention',
        'phone1' => 'setPhone1',
        'email' => 'setEmail',
        'override_address' => 'setOverrideAddress',
        'address_line1' => 'setAddressLine1',
        'address_line2' => 'setAddressLine2',
        'city' => 'setCity',
        'country' => 'setCountry',
        'county' => 'setCounty',
        'postal_code' => 'setPostalCode',
        'ship_via' => 'setShipVia',
        'fob_point' => 'setFobPoint',
        'shipping_terms' => 'setShippingTerms',
        'shipping_zone' => 'setShippingZone',
        'residential_delivery' => 'setResidentialDelivery',
        'saturday_delivery' => 'setSaturdayDelivery',
        'use_customer_account' => 'setUseCustomerAccount',
        'insurance' => 'setInsurance',
        'freight_amt' => 'setFreightAmt',
        'freight_cost' => 'setFreightCost',
        'transaction_type' => 'setTransactionType',
        'mode_of_trasport' => 'setModeOfTrasport',
        'container' => 'setContainer',
        'note' => 'setNote',
        'shipment_detail_lines' => 'setShipmentDetailLines',
        'shipment_package_lines' => 'setShipmentPackageLines'
    ];

    /**
     * Array of attributes to getter functions (for serialization of requests)
     *
     * @var string[]
     */
    protected static $getters = [
        'shipment_type' => 'getShipmentType',
        'operation' => 'getOperation',
        'shipment_date' => 'getShipmentDate',
        'location' => 'getLocation',
        'customer' => 'getCustomer',
        'owner' => 'getOwner',
        'hold' => 'getHold',
        'from_warehouse' => 'getFromWarehouse',
        'to_warehouse' => 'getToWarehouse',
        'control_quantity' => 'getControlQuantity',
        'override_contact' => 'getOverrideContact',
        'business_name' => 'getBusinessName',
        'attention' => 'getAttention',
        'phone1' => 'getPhone1',
        'email' => 'getEmail',
        'override_address' => 'getOverrideAddress',
        'address_line1' => 'getAddressLine1',
        'address_line2' => 'getAddressLine2',
        'city' => 'getCity',
        'country' => 'getCountry',
        'county' => 'getCounty',
        'postal_code' => 'getPostalCode',
        'ship_via' => 'getShipVia',
        'fob_point' => 'getFobPoint',
        'shipping_terms' => 'getShippingTerms',
        'shipping_zone' => 'getShippingZone',
        'residential_delivery' => 'getResidentialDelivery',
        'saturday_delivery' => 'getSaturdayDelivery',
        'use_customer_account' => 'getUseCustomerAccount',
        'insurance' => 'getInsurance',
        'freight_amt' => 'getFreightAmt',
        'freight_cost' => 'getFreightCost',
        'transaction_type' => 'getTransactionType',
        'mode_of_trasport' => 'getModeOfTrasport',
        'container' => 'getContainer',
        'note' => 'getNote',
        'shipment_detail_lines' => 'getShipmentDetailLines',
        'shipment_package_lines' => 'getShipmentPackageLines'
    ];

    /**
     * Array of attributes where the key is the local name,
     * and the value is the original name
     *
     * @return array
     */
    public static function attributeMap()
    {
        return self::$attributeMap;
    }

    /**
     * Array of attributes to setter functions (for deserialization of responses)
     *
     * @return array
     */
    public static function setters()
    {
        return self::$setters;
    }

    /**
     * Array of attributes to getter functions (for serialization of requests)
     *
     * @return array
     */
    public static function getters()
    {
        return self::$getters;
    }

    /**
     * The original name of the model.
     *
     * @return string
     */
    public function getModelName()
    {
        return self::$swaggerModelName;
    }

    

    

    /**
     * Associative array for storing property values
     *
     * @var mixed[]
     */
    protected $container = [];

    /**
     * Constructor
     *
     * @param mixed[] $data Associated array of property values
     *                      initializing the model
     */
    public function __construct(array $data = null)
    {
        $this->container['shipment_type'] = isset($data['shipment_type']) ? $data['shipment_type'] : null;
        $this->container['operation'] = isset($data['operation']) ? $data['operation'] : null;
        $this->container['shipment_date'] = isset($data['shipment_date']) ? $data['shipment_date'] : null;
        $this->container['location'] = isset($data['location']) ? $data['location'] : null;
        $this->container['customer'] = isset($data['customer']) ? $data['customer'] : null;
        $this->container['owner'] = isset($data['owner']) ? $data['owner'] : null;
        $this->container['hold'] = isset($data['hold']) ? $data['hold'] : null;
        $this->container['from_warehouse'] = isset($data['from_warehouse']) ? $data['from_warehouse'] : null;
        $this->container['to_warehouse'] = isset($data['to_warehouse']) ? $data['to_warehouse'] : null;
        $this->container['control_quantity'] = isset($data['control_quantity']) ? $data['control_quantity'] : null;
        $this->container['override_contact'] = isset($data['override_contact']) ? $data['override_contact'] : null;
        $this->container['business_name'] = isset($data['business_name']) ? $data['business_name'] : null;
        $this->container['attention'] = isset($data['attention']) ? $data['attention'] : null;
        $this->container['phone1'] = isset($data['phone1']) ? $data['phone1'] : null;
        $this->container['email'] = isset($data['email']) ? $data['email'] : null;
        $this->container['override_address'] = isset($data['override_address']) ? $data['override_address'] : null;
        $this->container['address_line1'] = isset($data['address_line1']) ? $data['address_line1'] : null;
        $this->container['address_line2'] = isset($data['address_line2']) ? $data['address_line2'] : null;
        $this->container['city'] = isset($data['city']) ? $data['city'] : null;
        $this->container['country'] = isset($data['country']) ? $data['country'] : null;
        $this->container['county'] = isset($data['county']) ? $data['county'] : null;
        $this->container['postal_code'] = isset($data['postal_code']) ? $data['postal_code'] : null;
        $this->container['ship_via'] = isset($data['ship_via']) ? $data['ship_via'] : null;
        $this->container['fob_point'] = isset($data['fob_point']) ? $data['fob_point'] : null;
        $this->container['shipping_terms'] = isset($data['shipping_terms']) ? $data['shipping_terms'] : null;
        $this->container['shipping_zone'] = isset($data['shipping_zone']) ? $data['shipping_zone'] : null;
        $this->container['residential_delivery'] = isset($data['residential_delivery']) ? $data['residential_delivery'] : null;
        $this->container['saturday_delivery'] = isset($data['saturday_delivery']) ? $data['saturday_delivery'] : null;
        $this->container['use_customer_account'] = isset($data['use_customer_account']) ? $data['use_customer_account'] : null;
        $this->container['insurance'] = isset($data['insurance']) ? $data['insurance'] : null;
        $this->container['freight_amt'] = isset($data['freight_amt']) ? $data['freight_amt'] : null;
        $this->container['freight_cost'] = isset($data['freight_cost']) ? $data['freight_cost'] : null;
        $this->container['transaction_type'] = isset($data['transaction_type']) ? $data['transaction_type'] : null;
        $this->container['mode_of_trasport'] = isset($data['mode_of_trasport']) ? $data['mode_of_trasport'] : null;
        $this->container['container'] = isset($data['container']) ? $data['container'] : null;
        $this->container['note'] = isset($data['note']) ? $data['note'] : null;
        $this->container['shipment_detail_lines'] = isset($data['shipment_detail_lines']) ? $data['shipment_detail_lines'] : null;
        $this->container['shipment_package_lines'] = isset($data['shipment_package_lines']) ? $data['shipment_package_lines'] : null;
    }

    /**
     * Show all the invalid properties with reasons.
     *
     * @return array invalid properties with reasons
     */
    public function listInvalidProperties()
    {
        $invalidProperties = [];

        return $invalidProperties;
    }

    /**
     * Validate all the properties in the model
     * return true if all passed
     *
     * @return bool True if all properties are valid
     */
    public function valid()
    {
        return count($this->listInvalidProperties()) === 0;
    }


    /**
     * Gets shipment_type
     *
     * @return object
     */
    public function getShipmentType()
    {
        return $this->container['shipment_type'];
    }

    /**
     * Sets shipment_type
     *
     * @param object $shipment_type shipment_type
     *
     * @return $this
     */
    public function setShipmentType($shipment_type)
    {
        $this->container['shipment_type'] = $shipment_type;

        return $this;
    }

    /**
     * Gets operation
     *
     * @return object
     */
    public function getOperation()
    {
        return $this->container['operation'];
    }

    /**
     * Sets operation
     *
     * @param object $operation operation
     *
     * @return $this
     */
    public function setOperation($operation)
    {
        $this->container['operation'] = $operation;

        return $this;
    }

    /**
     * Gets shipment_date
     *
     * @return object
     */
    public function getShipmentDate()
    {
        return $this->container['shipment_date'];
    }

    /**
     * Sets shipment_date
     *
     * @param object $shipment_date shipment_date
     *
     * @return $this
     */
    public function setShipmentDate($shipment_date)
    {
        $this->container['shipment_date'] = $shipment_date;

        return $this;
    }

    /**
     * Gets location
     *
     * @return object
     */
    public function getLocation()
    {
        return $this->container['location'];
    }

    /**
     * Sets location
     *
     * @param object $location location
     *
     * @return $this
     */
    public function setLocation($location)
    {
        $this->container['location'] = $location;

        return $this;
    }

    /**
     * Gets customer
     *
     * @return object
     */
    public function getCustomer()
    {
        return $this->container['customer'];
    }

    /**
     * Sets customer
     *
     * @param object $customer customer
     *
     * @return $this
     */
    public function setCustomer($customer)
    {
        $this->container['customer'] = $customer;

        return $this;
    }

    /**
     * Gets owner
     *
     * @return object
     */
    public function getOwner()
    {
        return $this->container['owner'];
    }

    /**
     * Sets owner
     *
     * @param object $owner owner
     *
     * @return $this
     */
    public function setOwner($owner)
    {
        $this->container['owner'] = $owner;

        return $this;
    }

    /**
     * Gets hold
     *
     * @return object
     */
    public function getHold()
    {
        return $this->container['hold'];
    }

    /**
     * Sets hold
     *
     * @param object $hold hold
     *
     * @return $this
     */
    public function setHold($hold)
    {
        $this->container['hold'] = $hold;

        return $this;
    }

    /**
     * Gets from_warehouse
     *
     * @return object
     */
    public function getFromWarehouse()
    {
        return $this->container['from_warehouse'];
    }

    /**
     * Sets from_warehouse
     *
     * @param object $from_warehouse from_warehouse
     *
     * @return $this
     */
    public function setFromWarehouse($from_warehouse)
    {
        $this->container['from_warehouse'] = $from_warehouse;

        return $this;
    }

    /**
     * Gets to_warehouse
     *
     * @return object
     */
    public function getToWarehouse()
    {
        return $this->container['to_warehouse'];
    }

    /**
     * Sets to_warehouse
     *
     * @param object $to_warehouse to_warehouse
     *
     * @return $this
     */
    public function setToWarehouse($to_warehouse)
    {
        $this->container['to_warehouse'] = $to_warehouse;

        return $this;
    }

    /**
     * Gets control_quantity
     *
     * @return object
     */
    public function getControlQuantity()
    {
        return $this->container['control_quantity'];
    }

    /**
     * Sets control_quantity
     *
     * @param object $control_quantity control_quantity
     *
     * @return $this
     */
    public function setControlQuantity($control_quantity)
    {
        $this->container['control_quantity'] = $control_quantity;

        return $this;
    }

    /**
     * Gets override_contact
     *
     * @return object
     */
    public function getOverrideContact()
    {
        return $this->container['override_contact'];
    }

    /**
     * Sets override_contact
     *
     * @param object $override_contact override_contact
     *
     * @return $this
     */
    public function setOverrideContact($override_contact)
    {
        $this->container['override_contact'] = $override_contact;

        return $this;
    }

    /**
     * Gets business_name
     *
     * @return object
     */
    public function getBusinessName()
    {
        return $this->container['business_name'];
    }

    /**
     * Sets business_name
     *
     * @param object $business_name business_name
     *
     * @return $this
     */
    public function setBusinessName($business_name)
    {
        $this->container['business_name'] = $business_name;

        return $this;
    }

    /**
     * Gets attention
     *
     * @return object
     */
    public function getAttention()
    {
        return $this->container['attention'];
    }

    /**
     * Sets attention
     *
     * @param object $attention attention
     *
     * @return $this
     */
    public function setAttention($attention)
    {
        $this->container['attention'] = $attention;

        return $this;
    }

    /**
     * Gets phone1
     *
     * @return object
     */
    public function getPhone1()
    {
        return $this->container['phone1'];
    }

    /**
     * Sets phone1
     *
     * @param object $phone1 phone1
     *
     * @return $this
     */
    public function setPhone1($phone1)
    {
        $this->container['phone1'] = $phone1;

        return $this;
    }

    /**
     * Gets email
     *
     * @return object
     */
    public function getEmail()
    {
        return $this->container['email'];
    }

    /**
     * Sets email
     *
     * @param object $email email
     *
     * @return $this
     */
    public function setEmail($email)
    {
        $this->container['email'] = $email;

        return $this;
    }

    /**
     * Gets override_address
     *
     * @return object
     */
    public function getOverrideAddress()
    {
        return $this->container['override_address'];
    }

    /**
     * Sets override_address
     *
     * @param object $override_address override_address
     *
     * @return $this
     */
    public function setOverrideAddress($override_address)
    {
        $this->container['override_address'] = $override_address;

        return $this;
    }

    /**
     * Gets address_line1
     *
     * @return object
     */
    public function getAddressLine1()
    {
        return $this->container['address_line1'];
    }

    /**
     * Sets address_line1
     *
     * @param object $address_line1 address_line1
     *
     * @return $this
     */
    public function setAddressLine1($address_line1)
    {
        $this->container['address_line1'] = $address_line1;

        return $this;
    }

    /**
     * Gets address_line2
     *
     * @return object
     */
    public function getAddressLine2()
    {
        return $this->container['address_line2'];
    }

    /**
     * Sets address_line2
     *
     * @param object $address_line2 address_line2
     *
     * @return $this
     */
    public function setAddressLine2($address_line2)
    {
        $this->container['address_line2'] = $address_line2;

        return $this;
    }

    /**
     * Gets city
     *
     * @return object
     */
    public function getCity()
    {
        return $this->container['city'];
    }

    /**
     * Sets city
     *
     * @param object $city city
     *
     * @return $this
     */
    public function setCity($city)
    {
        $this->container['city'] = $city;

        return $this;
    }

    /**
     * Gets country
     *
     * @return object
     */
    public function getCountry()
    {
        return $this->container['country'];
    }

    /**
     * Sets country
     *
     * @param object $country country
     *
     * @return $this
     */
    public function setCountry($country)
    {
        $this->container['country'] = $country;

        return $this;
    }

    /**
     * Gets county
     *
     * @return object
     */
    public function getCounty()
    {
        return $this->container['county'];
    }

    /**
     * Sets county
     *
     * @param object $county county
     *
     * @return $this
     */
    public function setCounty($county)
    {
        $this->container['county'] = $county;

        return $this;
    }

    /**
     * Gets postal_code
     *
     * @return object
     */
    public function getPostalCode()
    {
        return $this->container['postal_code'];
    }

    /**
     * Sets postal_code
     *
     * @param object $postal_code postal_code
     *
     * @return $this
     */
    public function setPostalCode($postal_code)
    {
        $this->container['postal_code'] = $postal_code;

        return $this;
    }

    /**
     * Gets ship_via
     *
     * @return object
     */
    public function getShipVia()
    {
        return $this->container['ship_via'];
    }

    /**
     * Sets ship_via
     *
     * @param object $ship_via ship_via
     *
     * @return $this
     */
    public function setShipVia($ship_via)
    {
        $this->container['ship_via'] = $ship_via;

        return $this;
    }

    /**
     * Gets fob_point
     *
     * @return object
     */
    public function getFobPoint()
    {
        return $this->container['fob_point'];
    }

    /**
     * Sets fob_point
     *
     * @param object $fob_point fob_point
     *
     * @return $this
     */
    public function setFobPoint($fob_point)
    {
        $this->container['fob_point'] = $fob_point;

        return $this;
    }

    /**
     * Gets shipping_terms
     *
     * @return object
     */
    public function getShippingTerms()
    {
        return $this->container['shipping_terms'];
    }

    /**
     * Sets shipping_terms
     *
     * @param object $shipping_terms shipping_terms
     *
     * @return $this
     */
    public function setShippingTerms($shipping_terms)
    {
        $this->container['shipping_terms'] = $shipping_terms;

        return $this;
    }

    /**
     * Gets shipping_zone
     *
     * @return object
     */
    public function getShippingZone()
    {
        return $this->container['shipping_zone'];
    }

    /**
     * Sets shipping_zone
     *
     * @param object $shipping_zone shipping_zone
     *
     * @return $this
     */
    public function setShippingZone($shipping_zone)
    {
        $this->container['shipping_zone'] = $shipping_zone;

        return $this;
    }

    /**
     * Gets residential_delivery
     *
     * @return object
     */
    public function getResidentialDelivery()
    {
        return $this->container['residential_delivery'];
    }

    /**
     * Sets residential_delivery
     *
     * @param object $residential_delivery residential_delivery
     *
     * @return $this
     */
    public function setResidentialDelivery($residential_delivery)
    {
        $this->container['residential_delivery'] = $residential_delivery;

        return $this;
    }

    /**
     * Gets saturday_delivery
     *
     * @return object
     */
    public function getSaturdayDelivery()
    {
        return $this->container['saturday_delivery'];
    }

    /**
     * Sets saturday_delivery
     *
     * @param object $saturday_delivery saturday_delivery
     *
     * @return $this
     */
    public function setSaturdayDelivery($saturday_delivery)
    {
        $this->container['saturday_delivery'] = $saturday_delivery;

        return $this;
    }

    /**
     * Gets use_customer_account
     *
     * @return object
     */
    public function getUseCustomerAccount()
    {
        return $this->container['use_customer_account'];
    }

    /**
     * Sets use_customer_account
     *
     * @param object $use_customer_account use_customer_account
     *
     * @return $this
     */
    public function setUseCustomerAccount($use_customer_account)
    {
        $this->container['use_customer_account'] = $use_customer_account;

        return $this;
    }

    /**
     * Gets insurance
     *
     * @return object
     */
    public function getInsurance()
    {
        return $this->container['insurance'];
    }

    /**
     * Sets insurance
     *
     * @param object $insurance insurance
     *
     * @return $this
     */
    public function setInsurance($insurance)
    {
        $this->container['insurance'] = $insurance;

        return $this;
    }

    /**
     * Gets freight_amt
     *
     * @return object
     */
    public function getFreightAmt()
    {
        return $this->container['freight_amt'];
    }

    /**
     * Sets freight_amt
     *
     * @param object $freight_amt freight_amt
     *
     * @return $this
     */
    public function setFreightAmt($freight_amt)
    {
        $this->container['freight_amt'] = $freight_amt;

        return $this;
    }

    /**
     * Gets freight_cost
     *
     * @return object
     */
    public function getFreightCost()
    {
        return $this->container['freight_cost'];
    }

    /**
     * Sets freight_cost
     *
     * @param object $freight_cost freight_cost
     *
     * @return $this
     */
    public function setFreightCost($freight_cost)
    {
        $this->container['freight_cost'] = $freight_cost;

        return $this;
    }

    /**
     * Gets transaction_type
     *
     * @return object
     */
    public function getTransactionType()
    {
        return $this->container['transaction_type'];
    }

    /**
     * Sets transaction_type
     *
     * @param object $transaction_type transaction_type
     *
     * @return $this
     */
    public function setTransactionType($transaction_type)
    {
        $this->container['transaction_type'] = $transaction_type;

        return $this;
    }

    /**
     * Gets mode_of_trasport
     *
     * @return object
     */
    public function getModeOfTrasport()
    {
        return $this->container['mode_of_trasport'];
    }

    /**
     * Sets mode_of_trasport
     *
     * @param object $mode_of_trasport mode_of_trasport
     *
     * @return $this
     */
    public function setModeOfTrasport($mode_of_trasport)
    {
        $this->container['mode_of_trasport'] = $mode_of_trasport;

        return $this;
    }

    /**
     * Gets container
     *
     * @return object
     */
    public function getContainer()
    {
        return $this->container['container'];
    }

    /**
     * Sets container
     *
     * @param object $container container
     *
     * @return $this
     */
    public function setContainer($container)
    {
        $this->container['container'] = $container;

        return $this;
    }

    /**
     * Gets note
     *
     * @return object
     */
    public function getNote()
    {
        return $this->container['note'];
    }

    /**
     * Sets note
     *
     * @param object $note note
     *
     * @return $this
     */
    public function setNote($note)
    {
        $this->container['note'] = $note;

        return $this;
    }

    /**
     * Gets shipment_detail_lines
     *
     * @return \Ekstralys\VismaNetApi\Model\ShipmentDetailLineUpdateDto[]
     */
    public function getShipmentDetailLines()
    {
        return $this->container['shipment_detail_lines'];
    }

    /**
     * Sets shipment_detail_lines
     *
     * @param \Ekstralys\VismaNetApi\Model\ShipmentDetailLineUpdateDto[] $shipment_detail_lines shipment_detail_lines
     *
     * @return $this
     */
    public function setShipmentDetailLines($shipment_detail_lines)
    {
        $this->container['shipment_detail_lines'] = $shipment_detail_lines;

        return $this;
    }

    /**
     * Gets shipment_package_lines
     *
     * @return \Ekstralys\VismaNetApi\Model\ShipmentPackageLineUpdateDto[]
     */
    public function getShipmentPackageLines()
    {
        return $this->container['shipment_package_lines'];
    }

    /**
     * Sets shipment_package_lines
     *
     * @param \Ekstralys\VismaNetApi\Model\ShipmentPackageLineUpdateDto[] $shipment_package_lines shipment_package_lines
     *
     * @return $this
     */
    public function setShipmentPackageLines($shipment_package_lines)
    {
        $this->container['shipment_package_lines'] = $shipment_package_lines;

        return $this;
    }
    /**
     * Returns true if offset exists. False otherwise.
     *
     * @param integer $offset Offset
     *
     * @return boolean
     */
    public function offsetExists($offset)
    {
        return isset($this->container[$offset]);
    }

    /**
     * Gets offset.
     *
     * @param integer $offset Offset
     *
     * @return mixed
     */
    public function offsetGet($offset)
    {
        return isset($this->container[$offset]) ? $this->container[$offset] : null;
    }

    /**
     * Sets value based on offset.
     *
     * @param integer $offset Offset
     * @param mixed   $value  Value to be set
     *
     * @return void
     */
    public function offsetSet($offset, $value)
    {
        if (is_null($offset)) {
            $this->container[] = $value;
        } else {
            $this->container[$offset] = $value;
        }
    }

    /**
     * Unsets offset.
     *
     * @param integer $offset Offset
     *
     * @return void
     */
    public function offsetUnset($offset)
    {
        unset($this->container[$offset]);
    }

    /**
     * Gets the string presentation of the object
     *
     * @return string
     */
    public function __toString()
    {
        if (defined('JSON_PRETTY_PRINT')) { // use JSON pretty print
            return json_encode(
                ObjectSerializer::sanitizeForSerialization($this),
                JSON_PRETTY_PRINT
            );
        }

        return json_encode(ObjectSerializer::sanitizeForSerialization($this));
    }
}


