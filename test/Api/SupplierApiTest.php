<?php
/**
 * SupplierApiTest
 * PHP version 5
 *
 * @category Class
 * @package  Ekstralys\VismaNetApi
 * @author   Swagger Codegen team
 * @link     https://github.com/swagger-api/swagger-codegen
 */

/**
 * Visma Net API
 *
 * No description provided (generated by Swagger Codegen https://github.com/swagger-api/swagger-codegen)
 *
 * OpenAPI spec version: 8.43.00.1002
 * 
 * Generated by: https://github.com/swagger-api/swagger-codegen.git
 * Swagger Codegen version: 2.4.19
 */

/**
 * NOTE: This class is auto generated by the swagger code generator program.
 * https://github.com/swagger-api/swagger-codegen
 * Please update the test case below to test the endpoint.
 */

namespace Ekstralys\VismaNetApi;

use \Ekstralys\VismaNetApi\Configuration;
use \Ekstralys\VismaNetApi\ApiException;
use \Ekstralys\VismaNetApi\ObjectSerializer;

/**
 * SupplierApiTest Class Doc Comment
 *
 * @category Class
 * @package  Ekstralys\VismaNetApi
 * @author   Swagger Codegen team
 * @link     https://github.com/swagger-api/swagger-codegen
 */
class SupplierApiTest extends \PHPUnit_Framework_TestCase
{

    /**
     * Setup before running any test cases
     */
    public static function setUpBeforeClass()
    {
    }

    /**
     * Setup before running each test case
     */
    public function setUp()
    {
    }

    /**
     * Clean up after running each test case
     */
    public function tearDown()
    {
    }

    /**
     * Clean up after running all test cases
     */
    public static function tearDownAfterClass()
    {
    }

    /**
     * Test case for supplierGetAll
     *
     * Get a range of suppliers - ScreenId=AP303000.
     *
     */
    public function testSupplierGetAll()
    {
    }

    /**
     * Test case for supplierGetAllContactForSupplierBysupplierCd
     *
     * Get a range of a Supplier of a specific supplier.
     *
     */
    public function testSupplierGetAllContactForSupplierBysupplierCd()
    {
    }

    /**
     * Test case for supplierGetAllDocumentsForSupplierBysupplierNumber
     *
     * Gets a range of documents for a specific supplier.
     *
     */
    public function testSupplierGetAllDocumentsForSupplierBysupplierNumber()
    {
    }

    /**
     * Test case for supplierGetAllInvoicesForSupplierBysupplierNumber
     *
     * Get a range of invoices for a specific supplier  Request page size must be lower or equal to the allowed max page size which is returned as part of the metadata information.  If requested page size is greater than allowed max page size, request will be limited to max page size  Change log:  2020-May:Added forced pagination.
     *
     */
    public function testSupplierGetAllInvoicesForSupplierBysupplierNumber()
    {
    }

    /**
     * Test case for supplierGetAllSupplierBalance
     *
     * Get the balance of a range of suppliers.
     *
     */
    public function testSupplierGetAllSupplierBalance()
    {
    }

    /**
     * Test case for supplierGetAllSupplierClasses
     *
     * Get supplier classes.
     *
     */
    public function testSupplierGetAllSupplierClasses()
    {
    }

    /**
     * Test case for supplierGetAllSupplierPOBalance
     *
     * Get the PO balance of a range of suppliers.
     *
     */
    public function testSupplierGetAllSupplierPOBalance()
    {
    }

    /**
     * Test case for supplierGetBysupplierCd
     *
     * Get a specific supplier.
     *
     */
    public function testSupplierGetBysupplierCd()
    {
    }

    /**
     * Test case for supplierGetSpecificSupplierClassBysupplierClassId
     *
     * Get a specific supplier class.
     *
     */
    public function testSupplierGetSpecificSupplierClassBysupplierClassId()
    {
    }

    /**
     * Test case for supplierGetSupplierBalanceBysupplierCd
     *
     * Get a specific supplier's PO balance.
     *
     */
    public function testSupplierGetSupplierBalanceBysupplierCd()
    {
    }

    /**
     * Test case for supplierGetSupplierPOBalanceBysupplierCd
     *
     * Get a specific supplier's PO balance.
     *
     */
    public function testSupplierGetSupplierPOBalanceBysupplierCd()
    {
    }

    /**
     * Test case for supplierPost
     *
     * Create a supplier.
     *
     */
    public function testSupplierPost()
    {
    }

    /**
     * Test case for supplierPutBysupplierCd
     *
     * Update a specific supplier.
     *
     */
    public function testSupplierPutBysupplierCd()
    {
    }
}
