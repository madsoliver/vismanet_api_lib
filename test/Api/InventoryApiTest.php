<?php
/**
 * InventoryApiTest
 * PHP version 5
 *
 * @category Class
 * @package  Ekstralys\VismaNetApi
 * @author   Swagger Codegen team
 * @link     https://github.com/swagger-api/swagger-codegen
 */

/**
 * Visma Net API
 *
 * No description provided (generated by Swagger Codegen https://github.com/swagger-api/swagger-codegen)
 *
 * OpenAPI spec version: 8.43.00.1002
 * 
 * Generated by: https://github.com/swagger-api/swagger-codegen.git
 * Swagger Codegen version: 2.4.19
 */

/**
 * NOTE: This class is auto generated by the swagger code generator program.
 * https://github.com/swagger-api/swagger-codegen
 * Please update the test case below to test the endpoint.
 */

namespace Ekstralys\VismaNetApi;

use \Ekstralys\VismaNetApi\Configuration;
use \Ekstralys\VismaNetApi\ApiException;
use \Ekstralys\VismaNetApi\ObjectSerializer;

/**
 * InventoryApiTest Class Doc Comment
 *
 * @category Class
 * @package  Ekstralys\VismaNetApi
 * @author   Swagger Codegen team
 * @link     https://github.com/swagger-api/swagger-codegen
 */
class InventoryApiTest extends \PHPUnit_Framework_TestCase
{

    /**
     * Setup before running any test cases
     */
    public static function setUpBeforeClass()
    {
    }

    /**
     * Setup before running each test case
     */
    public function setUp()
    {
    }

    /**
     * Clean up after running each test case
     */
    public function tearDown()
    {
    }

    /**
     * Clean up after running all test cases
     */
    public static function tearDownAfterClass()
    {
    }

    /**
     * Test case for inventoryChangeInventoryNbrActionByinternalId
     *
     * Updates the InventoryNbr for the specified Inventory.
     *
     */
    public function testInventoryChangeInventoryNbrActionByinternalId()
    {
    }

    /**
     * Test case for inventoryCreateInventoryAttachmentByinventoryNumber
     *
     * Creates an attachment and associates it with a Inventory Item. If the file already exists, a new revision is created..
     *
     */
    public function testInventoryCreateInventoryAttachmentByinventoryNumber()
    {
    }

    /**
     * Test case for inventoryCreateInventoryCrossReferencesByinventoryNumber
     *
     * Creates a cross reference for a specific inventory.
     *
     */
    public function testInventoryCreateInventoryCrossReferencesByinventoryNumber()
    {
    }

    /**
     * Test case for inventoryGetAll
     *
     * Get a range of Inventory items - ScreenId=IN202000 and IN202500.
     *
     */
    public function testInventoryGetAll()
    {
    }

    /**
     * Test case for inventoryGetByinventoryNumber
     *
     * Get a specific Inventory item.
     *
     */
    public function testInventoryGetByinventoryNumber()
    {
    }

    /**
     * Test case for inventoryGetInventoryCrossReferencesByinventoryNumber
     *
     * Get a range of cross-reference for a specific inventory.
     *
     */
    public function testInventoryGetInventoryCrossReferencesByinventoryNumber()
    {
    }

    /**
     * Test case for inventoryGetInventoryPOReceiptTakeBarCodesByreceiptNbr
     *
     * Get a range of barcodes for a specific purchase receipt.
     *
     */
    public function testInventoryGetInventoryPOReceiptTakeBarCodesByreceiptNbr()
    {
    }

    /**
     * Test case for inventoryGetInventorySalesOrderBarCodesByorderNbr
     *
     * Get a range of barcodes for a specific sales order.
     *
     */
    public function testInventoryGetInventorySalesOrderBarCodesByorderNbr()
    {
    }

    /**
     * Test case for inventoryGetInventoryShipmentBarCodesByshipmentNbr
     *
     * Get a range of barcodes for a specific shipment.
     *
     */
    public function testInventoryGetInventoryShipmentBarCodesByshipmentNbr()
    {
    }

    /**
     * Test case for inventoryGetInventoryStockTakeBarCodesByreferenceNumber
     *
     * Get a range of barcodes for a specific stock count.
     *
     */
    public function testInventoryGetInventoryStockTakeBarCodesByreferenceNumber()
    {
    }

    /**
     * Test case for inventoryGetItemClasses
     *
     * Get Inventory Item Classes.
     *
     */
    public function testInventoryGetItemClasses()
    {
    }

    /**
     * Test case for inventoryGetItemPostClasses
     *
     * Get Inventory Item Post Classes.
     *
     */
    public function testInventoryGetItemPostClasses()
    {
    }

    /**
     * Test case for inventoryGetSpecificItemClassByitemClassNumber
     *
     * Get Specific Inventory Item Class.
     *
     */
    public function testInventoryGetSpecificItemClassByitemClassNumber()
    {
    }

    /**
     * Test case for inventoryPost
     *
     * Create an inventory item.
     *
     */
    public function testInventoryPost()
    {
    }

    /**
     * Test case for inventoryPutByinventoryNumber
     *
     * Update a specific inventory item.
     *
     */
    public function testInventoryPutByinventoryNumber()
    {
    }

    /**
     * Test case for inventoryUpdateCostNonStockItemByinventoryCd
     *
     * Update Cost action on Non-Stock Item.
     *
     */
    public function testInventoryUpdateCostNonStockItemByinventoryCd()
    {
    }

    /**
     * Test case for inventoryUpdateInventoryCrossReferencesByinventoryNumberalternateTypealternateId
     *
     * Updates a specific cross reference for a specific inventory.
     *
     */
    public function testInventoryUpdateInventoryCrossReferencesByinventoryNumberalternateTypealternateId()
    {
    }
}
