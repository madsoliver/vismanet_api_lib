<?php
/**
 * CustomerContractApiTest
 * PHP version 5
 *
 * @category Class
 * @package  Ekstralys\VismaNetApi
 * @author   Swagger Codegen team
 * @link     https://github.com/swagger-api/swagger-codegen
 */

/**
 * Visma Net API
 *
 * No description provided (generated by Swagger Codegen https://github.com/swagger-api/swagger-codegen)
 *
 * OpenAPI spec version: 8.43.00.1002
 * 
 * Generated by: https://github.com/swagger-api/swagger-codegen.git
 * Swagger Codegen version: 2.4.19
 */

/**
 * NOTE: This class is auto generated by the swagger code generator program.
 * https://github.com/swagger-api/swagger-codegen
 * Please update the test case below to test the endpoint.
 */

namespace Ekstralys\VismaNetApi;

use \Ekstralys\VismaNetApi\Configuration;
use \Ekstralys\VismaNetApi\ApiException;
use \Ekstralys\VismaNetApi\ObjectSerializer;

/**
 * CustomerContractApiTest Class Doc Comment
 *
 * @category Class
 * @package  Ekstralys\VismaNetApi
 * @author   Swagger Codegen team
 * @link     https://github.com/swagger-api/swagger-codegen
 */
class CustomerContractApiTest extends \PHPUnit_Framework_TestCase
{

    /**
     * Setup before running any test cases
     */
    public static function setUpBeforeClass()
    {
    }

    /**
     * Setup before running each test case
     */
    public function setUp()
    {
    }

    /**
     * Clean up after running each test case
     */
    public function tearDown()
    {
    }

    /**
     * Clean up after running all test cases
     */
    public static function tearDownAfterClass()
    {
    }

    /**
     * Test case for customerContractActivateContractBycontractId
     *
     * Activate contract operation.
     *
     */
    public function testCustomerContractActivateContractBycontractId()
    {
    }

    /**
     * Test case for customerContractActivateUpgradeBycontractId
     *
     * Activate upgrade contract operation.
     *
     */
    public function testCustomerContractActivateUpgradeBycontractId()
    {
    }

    /**
     * Test case for customerContractCreateCustomerContract
     *
     * Create a CustomerContract.
     *
     */
    public function testCustomerContractCreateCustomerContract()
    {
    }

    /**
     * Test case for customerContractGetAll
     *
     * Get a range of Customer Contracts, a filter needs to be specified - ScreenId=CT301000.
     *
     */
    public function testCustomerContractGetAll()
    {
    }

    /**
     * Test case for customerContractGetCustomerContractBycontractId
     *
     * Get a specific Customer Contract.
     *
     */
    public function testCustomerContractGetCustomerContractBycontractId()
    {
    }

    /**
     * Test case for customerContractGetCustomerContractDetailsBycontractId
     *
     * Get a specific Customer Contract Details.
     *
     */
    public function testCustomerContractGetCustomerContractDetailsBycontractId()
    {
    }

    /**
     * Test case for customerContractGetCustomerContractRecurringSummaryBycontractId
     *
     * Get a specific Customer Contract Recurring Summary.
     *
     */
    public function testCustomerContractGetCustomerContractRecurringSummaryBycontractId()
    {
    }

    /**
     * Test case for customerContractGetCustomerContractSummaryBycontractId
     *
     * Get a specific Customer Contract Summary.
     *
     */
    public function testCustomerContractGetCustomerContractSummaryBycontractId()
    {
    }

    /**
     * Test case for customerContractPutBycontractId
     *
     * Update a specific CustomerContract.
     *
     */
    public function testCustomerContractPutBycontractId()
    {
    }

    /**
     * Test case for customerContractSetupAndActivateContractBycontractId
     *
     * Setup and Activate contract operation.
     *
     */
    public function testCustomerContractSetupAndActivateContractBycontractId()
    {
    }

    /**
     * Test case for customerContractSetupContractBycontractId
     *
     * Setup contract operation.
     *
     */
    public function testCustomerContractSetupContractBycontractId()
    {
    }

    /**
     * Test case for customerContractTerminateContractBycontractId
     *
     * Terminate contract operation.
     *
     */
    public function testCustomerContractTerminateContractBycontractId()
    {
    }

    /**
     * Test case for customerContractUpgradeContractBycontractId
     *
     * Upgrade contract operation.
     *
     */
    public function testCustomerContractUpgradeContractBycontractId()
    {
    }
}
